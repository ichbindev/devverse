{"version":3,"sources":["components/Layout/42.gif","actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/Layout/Navbar.js","components/Layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/Layout/Alert.js","components/Layout/Spinner.js","components/dashboard/DashboardActions.js","actions/profile.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/profile-forms/CreateProfile.js","components/profile-forms/EditProfile.js","components/profile-forms/AddExperience.js","components/profile-forms/AddEducation.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","components/Layout/NotFound.js","components/routing/PrivateRoute.js","components/routing/Routes.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","App.js","index.js"],"names":["module","exports","setAlert","msg","alertType","timeout","dispatch","id","uuidv4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","connect","state","auth","logout","window","location","reload","isAuthenticated","loading","authLinks","to","className","href","onClick","guestLinks","register","name","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","placeholder","login","required","minLength","alerts","alert","length","map","key","src","spinner","style","width","margin","display","alt","DashboardActions","getCurrentProfile","statusText","status","createProfile","history","edit","push","deleteExperience","delete","experience","experiences","exp","_id","company","title","format","from","deleteEducation","education","educations","edu","school","degree","profile","deleteAccount","confirm","user","useEffect","Spinner","withRouter","website","skills","githubusername","bio","twitter","facebook","linkedIn","youtube","instagram","displaySocialInputs","toggleSocialInputs","join","social","addExperience","put","current","description","toDateDisabled","toggleDisabled","checked","disabled","cols","rows","addEducation","fieldOfStudy","ProfileItem","avatar","slice","skill","index","getProfiles","profiles","ProfileTop","rel","ProfileAbout","trim","split","ProfileExperience","ProfileEducation","repos","getGithubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileById","userId","match","params","PostItem","addLike","removeLike","deletePost","text","likes","comments","date","showActions","defaultProps","addPost","setText","getPosts","posts","addComment","postId","deleteComment","commentId","comment","getPost","NotFound","Component","component","rest","render","props","Routes","exact","path","Register","Login","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","initialState","getItem","combineReducers","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","Landing","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.35f6d716.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/42.cf1f92f7.gif\";","import {v4 as uuidv4} from 'uuid';\r\n// >| DIPATCH ACTION |<\r\nimport { SET_ALERT, REMOVE_ALERT } from './types';\r\n\r\n// want to be able to dispatch more than one action from this function\r\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\r\n    const id = uuidv4();\r\n    // dispatch: SET_ALERT\r\n    dispatch({\r\n        type: SET_ALERT,\r\n        payload: { msg, alertType, id }\r\n    });\r\n    // dispatch: REMOVE_ALERT\r\n    // after 5 seconds || 5000 milliseconds\r\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n};","export const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\n// backend \\/------| success, fail |--------\\/\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN-FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\r\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\r\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\r\nexport const GET_PROFILES = 'GET_PROFILES';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const GET_POSTS = 'GET_POSTS';\r\nexport const POST_ERROR = 'POST_ERROR';\r\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\r\nexport const DELETE_POST = 'DELETE_POST';\r\n// POST\r\nexport const ADD_POST = 'ADD_POST';\r\nexport const GET_POST = 'GET_POST';\r\n// COMMENTS\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';","import axios from 'axios';\r\n// using axios to add a global header\r\n\r\nconst setAuthToken = token => {\r\n    if (token) {\r\n        axios.defaults.headers.common['x-auth-token'] = token;\r\n    } else {\r\n        delete axios.defaults.headers.common['x-auth-token'];\r\n    }\r\n}\r\n\r\nexport default setAuthToken;","// requests to backend made here\r\nimport axios from 'axios';\r\nimport { setAlert } from './alert'\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    CLEAR_PROFILE\r\n} from './types';\r\nimport setAuthToken from '../utils/setAuthToken'\r\n\r\n// Load User\r\nexport const loadUser = () => async dispatch => {\r\n    // check local storage here and in app.js\r\n    if (localStorage.token) {\r\n        setAuthToken(localStorage.token);\r\n    }\r\n    // then make request\r\n    try {\r\n        const res = await axios.get('/api/auth');\r\n        dispatch({\r\n            type: USER_LOADED,\r\n            payload: res.data\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: AUTH_ERROR\r\n        })\r\n    }\r\n};\r\n\r\n// Register a user\r\nexport const register = ({ name, email, password }) => async dispatch => {\r\n    // send headers\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    // prep data to send\r\n    const body = JSON.stringify({ name, email, password });\r\n\r\n    try {\r\n        const res = await axios.post('/api/users', body, config);\r\n        \r\n        dispatch({\r\n            type: REGISTER_SUCCESS,\r\n            payload: res.data\r\n        });\r\n        \r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if (errors) {\r\n            // show alert for each error\r\n            // loop thru errors\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n        dispatch({\r\n            type: REGISTER_FAIL\r\n        })\r\n    }\r\n\r\n};\r\n\r\n// Login user\r\nexport const login = (email, password) => async dispatch => {\r\n    // send headers\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    // prep data to send\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post('/api/auth', body, config);\r\n        \r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n        // so it runs immediately\r\n        dispatch(loadUser());\r\n\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if (errors) {\r\n            // show alert for each error\r\n            // loop thru errors\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n    }\r\n\r\n};\r\n\r\n// Logout / clear profile\r\nexport const logout = () => dispatch => {\r\n    dispatch({ type: CLEAR_PROFILE })\r\n    dispatch({ type: LOGOUT });\r\n    window.location.reload(false);\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes as propTypes } from \"prop-types\";\r\nimport { logout } from \"../../actions/auth\";\r\n\r\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\r\n  const authLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to='/profiles'>\r\n          <i className=\"fas fa-address-book\"/>{' '}\r\n          Developers\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/posts'>\r\n          <i className=\"fas fa-scroll\"/>{' '}\r\n          Posts\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/dashboard'>\r\n        <i className=\"fas fa-user\" />{' '}\r\n        <span className=\"hide-sm\"></span>Dashboard</Link>\r\n      </li>\r\n      <li>\r\n        <a href=\"#!\" onClick={logout}>\r\n          <i className=\"fas fa-sign-out-alt\" />{\" \"}\r\n          <span className=\"hide-sm\">Logout</span>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  const guestLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/profiles\">Developers</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/register\">Register</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/login\">Login</Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <nav className=\"navbar bg-dark\">\r\n      <h1>\r\n        <Link to=\"/\">\r\n          <i className=\"fas fa-user-secret\" /> >Dev>Verse\r\n        </Link>\r\n      </h1>\r\n      {!loading && (\r\n        <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  logout: propTypes.func.isRequired,\r\n  auth: propTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { PropTypes as propTypes } from 'prop-types';\r\n\r\nconst Landing = ({ isAuthenticated }) => {\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to='/dashboard' />\r\n    }\r\n\r\n\r\n    return (\r\n        <section className=\"landing\">\r\n            <div className=\"dark-overlay\">\r\n                <div className=\"landing-inner\">\r\n                    <h1 className=\"x-large\">DevVerse!</h1>\r\n                    <p className=\"lead\">\r\n                        A social network for developers, by developers!\r\n                    </p>\r\n                    <div className=\"buttons\">\r\n                        <Link to=\"/register\" className=\"btn btn-primary\">Sign Up</Link>\r\n                        <Link to=\"/login\" className=\"btn btn-light\">Login</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nLanding.propTypes = {\r\n    isAuthenticated: propTypes.bool,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\n// changed pt import to fix bug\r\nimport {PropTypes as propTypes} from 'prop-types';\r\n\r\n\r\n// destructured setAlert from the props thats possible via the connect pkg\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n    const { name, email, password, password2 } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value })\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        // make sure passwords match\r\n        if (password !== password2) {\r\n            // SET ALERT to the props\r\n            // * if you want you can add a timer to this cb by adding another arg in milliseconds after 'danger' *\r\n            setAlert('passwords do not match', 'danger');\r\n        } else {\r\n           register({ name, email, password });\r\n        }\r\n    };\r\n\r\n    // If isAuthenicated\r\n    if (isAuthenticated) {\r\n        return <Redirect to='/dashboard' />;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">Sign Up</h1>\r\n            <p className=\"lead\"><i className=\"fas fa-user\"/> Create Your Account</p>\r\n            <form \r\n                className=\"form\" \r\n                onSubmit={e => onSubmit(e)} \r\n                >\r\n                <div className=\"form-group\">\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Name\" \r\n                        name=\"name\" \r\n                        value={name} \r\n                        onChange={e => onChange(e)} \r\n                        // required \r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input \r\n                        type=\"email\" \r\n                        placeholder=\"Email Address\" \r\n                        name=\"email\"\r\n                        value={email} \r\n                        onChange={e => onChange(e)}\r\n                        // required \r\n                    />\r\n                    <small className=\"form-text\">\r\n                        This site uses gravatar so if you want a profile image, use an email that has an image icon uploaded to it...you're welcome lol.\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input \r\n                        type=\"password\"\r\n                        placeholder=\"Enter password\"\r\n                        name=\"password\"\r\n                        // minLength=\"6\"\r\n                        value={password} \r\n                        onChange={e => onChange(e)}\r\n                        // required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input \r\n                        type=\"password\"\r\n                        placeholder=\"Confirm password\"\r\n                        name=\"password2\"\r\n                        // minLength=\"6\"\r\n                        value={password2} \r\n                        onChange={e => onChange(e)}\r\n                        // required\r\n                    />\r\n                </div>\r\n                <input \r\n                    type=\"submit\" \r\n                    className=\"btn btn-primary\" \r\n                    value=\"Register\"\r\n                />\r\n            </form>\r\n            <p className=\"my-1\">\r\n                Already have an account? <Link to='/login'>Sign In</Link>\r\n            </p>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nRegister.propTypes = {\r\n    setAlert: propTypes.func.isRequired,\r\n    register: propTypes.func.isRequired,\r\n    isAuthenticated: propTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\n// when you import an action you have to pass it to the connect cb that's being exported\r\n//takes two args (any state you want to map) & an object with actions used\r\nexport default connect(mapStateToProps, { setAlert, register })(Register);","import React, { Fragment, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { PropTypes as propTypes } from 'prop-types';\r\nimport { login } from '../../actions/auth';\r\n\r\n\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        // LOGIN here!!\r\n        login(email, password);\r\n    };\r\n\r\n    // Redirect if logged in\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to='/dashboard' />;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">Sign In</h1>\r\n            <p className=\"lead\"><i className=\"fas fa-user\"/> Sign-in to Your Account</p>\r\n            <form \r\n                className=\"form\" \r\n                onSubmit={e => onSubmit(e)} \r\n                >\r\n                \r\n                <div className=\"form-group\">\r\n                    <input \r\n                        type=\"email\" \r\n                        placeholder=\"Email Address\" \r\n                        name=\"email\"\r\n                        value={email} \r\n                        onChange={e => onChange(e)}\r\n                        required \r\n                    />\r\n                    \r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input \r\n                        type=\"password\"\r\n                        placeholder=\"Enter password\"\r\n                        name=\"password\"\r\n                        minLength=\"6\"\r\n                        value={password} \r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                \r\n                <input \r\n                    type=\"submit\" \r\n                    className=\"btn btn-primary\" \r\n                    value=\"Login\"\r\n                />\r\n            </form>\r\n            <p className=\"my-1\">\r\n                Don't have an account? <Link to='/register'>Sign Up</Link>\r\n            </p>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nLogin.propTypes = {\r\n    login: propTypes.func.isRequired,\r\n    isAuthenticated: propTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import React from 'react';\r\n// changed pt import to fix bug\r\nimport {PropTypes as propTypes} from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Alert = ({ alerts }) => \r\n    alerts !== null && \r\n    alerts.length > 0 && \r\n    alerts.map(alert => (\r\n        <div\r\n            key={alert.id} \r\n            className={`alert alert-${alert.alertType}`}\r\n        >\r\n            { alert.msg }\r\n        </div>\r\n    ));\r\n\r\nAlert.propTypes = {\r\n    alerts: propTypes.array.isRequired\r\n};\r\n\r\n// we want the state\r\nconst mapStatetoProps = state => ({\r\n    alerts: state.alert\r\n});\r\n\r\nexport default connect(mapStatetoProps)(Alert);\r\n","import React, { Fragment } from 'react';\r\nimport spinner from './42.gif'\r\n\r\nexport default () => (\r\n    <Fragment>\r\n        <img \r\n            src={spinner}\r\n            style={{\r\n                width: '125px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }} \r\n            alt=\"Loading...\"\r\n        />\r\n        \r\n    </Fragment>\r\n)","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DashboardActions = () => {\r\n    return (\r\n        <div className=\"dash-buttons\">\r\n            <Link to=\"/edit-profile\" className=\"btn btn-light\">\r\n                <i className=\"fas fa-user-circle text-primary\"/>\r\n                Edit Profile\r\n            </Link>\r\n            <Link to=\"/add-experience\" className=\"btn btn-light\">\r\n                <i className=\"fas fa-user-circle text-primary\"/>\r\n                Add Experience\r\n            </Link>\r\n            <Link to=\"add-education\" className=\"btn btn-light\">\r\n                <i className=\"fas fa-user-circle text-primary\"/>\r\n                Add Education\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\nexport default DashboardActions;","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n    GET_PROFILE,\r\n    PROFILE_ERROR,\r\n    UPDATE_PROFILE,\r\n    CLEAR_PROFILE,\r\n    ACCOUNT_DELETED,\r\n    GET_PROFILES,\r\n    GET_REPOS\r\n} from './types';\r\n\r\n// Get current user's profile\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/profile/me');\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({ type: CLEAR_PROFILE })\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n// ===================\r\n// Get all profiles\r\nexport const getProfiles = () => async dispatch => {\r\n    // when they go to the profile list page: we want to clear whats in the current profile\r\n    dispatch({ type: CLEAR_PROFILE });\r\n\r\n    try {\r\n        const res = await axios.get('/api/profile');\r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n// ===================\r\n// Get profile by ID\r\nexport const getProfileById = userId => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/profile/user/${userId}`);\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n// ===================\r\n// Get GITHUB_REPOSITORIES\r\nexport const getGithubRepos = username => async dispatch => {\r\n\r\n    try {\r\n        const res = await axios.get(`/api/profile/github/${username}`);\r\n        dispatch({\r\n            type: GET_REPOS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n// ===================\r\n/**\r\n * Since we are utilizing GET_PROFILE && PRFILE_ERROR we do not need to create a resolver for the action!\r\n */\r\n// create or update profile\r\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\r\n\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        const res = await axios.post('/api/profile', formData, config);\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\r\n\r\n        if (!edit) {\r\n            history.push('/dashboard');\r\n        }\r\n\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if (errors) {\r\n            // show alert for each error\r\n            // loop thru errors\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        };\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n}\r\n\r\n// Add experience\r\nexport const addExperience = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        const res = await axios.put('/api/profile/experience', formData, config);\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert('Experience Added', 'success'));\r\n        \r\n        history.push('/dashboard');\r\n        \r\n\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if (errors) {\r\n            // show alert for each error\r\n            // loop thru errors\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        };\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\n// Add education\r\nexport const addEducation = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        const res = await axios.put('/api/profile/education', formData, config);\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert('Education Added', 'success'));\r\n        \r\n        history.push('/dashboard');\r\n        \r\n\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if (errors) {\r\n            // show alert for each error\r\n            // loop thru errors\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        };\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n}\r\n\r\n// ===============\r\n// Delete an experience\r\nexport const deleteExperience = id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/experience/${id}`);\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Experience Entry Removed', 'success'))\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n// Delete an education\r\nexport const deleteEducation = id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/education/${id}`);\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Education Entry Removed', 'success'))\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n// ======================\r\n// Delete account & profile\r\nexport const deleteAccount = () => async dispatch => {\r\n    // instantiate a confirm alert just to prevent any accidental deletes!\r\n    if (window.confirm('Are you sure about this?\\nThis action CANNOT be undone!')) {\r\n        try {\r\n            await axios.delete('/api/profile/');\r\n            dispatch({ type: CLEAR_PROFILE });\r\n            dispatch({ type: ACCOUNT_DELETED });\r\n    \r\n            dispatch(setAlert('Your account has been succefully deleted!', 'success'))\r\n    \r\n        } catch (err) {\r\n            dispatch({\r\n                type: PROFILE_ERROR,\r\n                payload: { msg: err.response.statusText, status: err.response.status }\r\n            });\r\n        }\r\n    }\r\n    \r\n};","import React, { Fragment } from 'react';\r\nimport { PropTypes as propTypes } from 'prop-types';\r\nimport Moment from 'react-moment'\r\nimport { connect } from 'react-redux';\r\nimport { deleteExperience } from '../../actions/profile'\r\n\r\nconst Experience = ({ experience, deleteExperience }) => {\r\n\r\n    const experiences = experience.map(exp => (\r\n        <tr key={exp._id}>\r\n            <td>{exp.company}</td>\r\n            <td className=\"hide-sm\">{exp.title}</td>\r\n            <td>\r\n                <Moment format='YYYY/MM/DD'>{exp.from}</Moment> - {\r\n                    exp.to === null ? (' Now') : (<Moment format='YYYY/MM/DD'>{exp.to}</Moment>)\r\n                }\r\n            </td>\r\n            <td>\r\n                <button \r\n                className=\"btn btn-danger\"\r\n                onClick={() => deleteExperience(exp._id)}>Delete</button>\r\n            </td>\r\n        </tr>\r\n    ))\r\n\r\n    return (\r\n        <Fragment>\r\n           <h2 className=\"my-2\">Experience Credentials</h2>\r\n           <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Company</th>\r\n                        <th className=\"hide-sm\">Title</th>\r\n                        <th className=\"hide-sm\">Years</th>\r\n                        <th />\r\n                    </tr>    \r\n                </thead>\r\n                <tbody>{experiences}</tbody>   \r\n            </table> \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nExperience.propTypes = {\r\n    experience: propTypes.array.isRequired,\r\n    deleteExperience: propTypes.func.isRequired\r\n}\r\n\r\n// mapStateToProps = state => ({});\r\n\r\nexport default connect(null, { deleteExperience })(Experience);\r\n\r\n","import React, { Fragment } from 'react';\r\nimport { PropTypes as propTypes } from 'prop-types';\r\nimport Moment from 'react-moment'\r\nimport { connect } from 'react-redux';\r\nimport { deleteEducation } from '../../actions/profile';\r\n\r\nconst Education = ({ education, deleteEducation }) => {\r\n\r\n    const educations = education.map(edu => (\r\n        <tr key={edu._id}>\r\n            <td>{edu.school}</td>\r\n            <td className=\"hide-sm\">{edu.degree}</td>\r\n            <td>\r\n                <Moment format='YYYY/MM/DD'>{edu.from}</Moment> - {\r\n                    edu.to === null ? (' Now') : (<Moment format='YYYY/MM/DD'>{edu.to}</Moment>)\r\n                }\r\n            </td>\r\n            <td>\r\n                <button \r\n                className=\"btn btn-danger\"\r\n                onClick={() => deleteEducation(edu._id)}>Delete</button>\r\n            </td>\r\n        </tr>\r\n    ))\r\n\r\n    return (\r\n        <Fragment>\r\n           <h2 className=\"my-2\">Education Credentials</h2>\r\n           <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>School</th>\r\n                        <th className=\"hide-sm\">Degree</th>\r\n                        <th className=\"hide-sm\">Years</th>\r\n                        <th />\r\n                    </tr>    \r\n                </thead>\r\n                <tbody>{educations}</tbody>   \r\n            </table> \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nEducation.propTypes = {\r\n    education: propTypes.array.isRequired,\r\n    deleteEducation: propTypes.func.isRequired\r\n}\r\n\r\n// mapStateToProps = state => ({});\r\n\r\nexport default connect(null, { deleteEducation })(Education);\r\n\r\n","import React, { useEffect, Fragment } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {PropTypes as propTypes} from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../Layout/Spinner';\r\nimport DashboardActions from './DashboardActions'\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile'\r\n\r\nconst Dashboard = ({ getCurrentProfile, deleteAccount,auth: { user }, profile: { profile, loading } }) => {\r\n\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n    }, [getCurrentProfile]);\r\n\r\n    return loading && profile === null ? <Spinner /> : <Fragment>\r\n        <h1 className=\"large text-primary\">Dashboard</h1>\r\n        <p className=\"lead\">\r\n            <i className=\"fas fa-user\" /> Welcome { user && user.name }\r\n        </p>\r\n        {profile !== null ? \r\n        <Fragment>\r\n            <DashboardActions />\r\n            <Experience experience={profile.experience} />\r\n            <Education education={profile.education} />\r\n            <div className=\"my-2\">\r\n                <button className=\"btn btn-danger\" onClick={() => deleteAccount()} >\r\n                    <i className=\"fas fa-user-minus\" /> Delete my account\r\n                </button>\r\n            </div>\r\n        </Fragment> : \r\n        <Fragment>\r\n            <p>You have not yet set up your profile. Make one now to start connecting today!</p>\r\n            <Link to='/create-profile' className='btn btn-primary my-1'>\r\n                Create Profile    \r\n            </Link>    \r\n        </Fragment>}\r\n    </Fragment>;\r\n}\r\n\r\nDashboard.propTypes = {\r\n    getCurrentProfile: propTypes.func.isRequired,\r\n    deleteAccount: propTypes.func.isRequired,\r\n    auth: propTypes.object.isRequired,\r\n    profile: propTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(Dashboard);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { PropTypes as propTypes } from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n// action\r\nimport { createProfile } from '../../actions/profile'\r\n\r\nconst CreateProfile = ({ createProfile, history }) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        company: '',\r\n        website: '',\r\n        location: '',\r\n        status: '',\r\n        skills: '',\r\n        githubusername:'',\r\n        bio: '',\r\n        twitter: '',\r\n        facebook: '',\r\n        linkedIn: '',\r\n        youtube: '',\r\n        instagram: ''\r\n    });\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n    // destructure form fields from state to use as js expressions('variables')\r\n    const {\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedIn,\r\n        youtube,\r\n        instagram\r\n    } = formData;\r\n\r\n\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createProfile(formData, history)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">Create Your Profile</h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fas fa-user\" /> The more info you give, the more you'll stand out!\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form className=\"form\" onSubmit={e => onSubmit(e)} >\r\n                {/* SELECT-DROPDOWN */}\r\n                <div className=\"form-group\">\r\n                    <select name=\"status\" value={status} onChange={e => onChange(e)}>\r\n                        <option value=\"0\">* Select Professional Status</option>\r\n                        <option value=\"Developer\">Developer</option>\r\n                        <option value=\"Junior Developer\">Junior Developer</option>\r\n                        <option value=\"Senior Developer\">Senior Developer</option>\r\n                        <option value=\"Manager\">Manager</option>\r\n                        <option value=\"Student of Learning\">Student of Learning</option>\r\n                        <option value=\"Instructor\">Instructor / Mentor / Teacher</option>\r\n                        <option value=\"Intern\">Intern</option>\r\n                        <option value=\"Other\">Other</option>\r\n                    </select>\r\n                    <small className=\"form-text\">\r\n                        Where are you at in your career up to this point?\r\n                    </small>\r\n                </div>\r\n                {/* COMPANY */}\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)} />\r\n                    <small className=\"form-text\">\r\n                        Could be one you work for, or your own company.\r\n                    </small>\r\n                </div>\r\n                {/* WEBSITE */}\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)} />\r\n                    <small className=\"form-text\">\r\n                        Company URL (if applicable)\r\n                    </small>\r\n                </div>\r\n                {/* LOCATION */}\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)} />\r\n                    <small className=\"form-text\">\r\n                        City and State (suggested: e.g.: New York, NY)\r\n                    </small>\r\n                </div>\r\n                {/* SKILLS */}\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)} />\r\n                    <small className=\"form-text\">\r\n                        Seperate your technology proficiencies with a comma.\r\n                    </small>\r\n                </div>\r\n                {/* GITHUB */}\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Github Username\" name=\"githubusername\" value={githubusername} onChange={e => onChange(e)} />\r\n                    <small className=\"form-text\">\r\n                        Add your github to load your latest repos to your profile!\r\n                    </small>\r\n                </div>\r\n                {/* BIO */}\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Bio\" name=\"bio\" value={bio} onChange={e => onChange(e)} />\r\n                    <small className=\"form-text\">\r\n                        Tell us a little bit about yourself.\r\n                    </small>\r\n                </div>\r\n                {/* -----ADD_SOCIAL----- */}\r\n                <div className=\"my-2\">\r\n                    <button type='button' className='btn btn-light' onClick={() => toggleSocialInputs(!displaySocialInputs)}>\r\n                        Add Social Network Accounts\r\n                    </button>\r\n                    <span>Optional</span>\r\n                </div>\r\n\r\n                {displaySocialInputs && <Fragment>\r\n                {/* TWITTER */}\r\n                <div className=\"form-group social-input\">\r\n                    <i className=\"fab fa-twitter fa-2x\" />\r\n                    <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)} />\r\n                </div>\r\n                {/* FACEBOOK */}\r\n                <div className=\"form-group social-input\">\r\n                    <i className=\"fab fa-facebook fa-2x\" />\r\n                    <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e => onChange(e)} />\r\n                </div>\r\n                {/* YOUTUBE */}\r\n                <div className=\"form-group social-input\">\r\n                    <i className=\"fab fa-youtube fa-2x\" />\r\n                    <input type=\"text\" placeholder=\"Youtube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)} />\r\n                </div>\r\n                {/* LINKEDIN */}\r\n                <div className=\"form-group social-input\">\r\n                    <i className=\"fab fa-linkedin fa-2x\" />\r\n                    <input type=\"text\" placeholder=\"LinkedIn URL\" name=\"linkedIn\" value={linkedIn} onChange={e => onChange(e)} />\r\n                </div>\r\n                {/* INSTAGRAM */}\r\n                <div className=\"form-group social-input\">\r\n                    <i className=\"fab fa-instagram fa-2x\" />\r\n                    <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)} />\r\n                </div>\r\n                    </Fragment>}\r\n\r\n                \r\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                <Link to=\"/dashboard\" className=\"btn btn-light my-1\">Go Back!</Link>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nCreateProfile.propTypes = {\r\n    createProfile: propTypes.func.isRequired,\r\n}\r\n\r\n// const mapStateToProps = ({\r\n    \r\n// })\r\n\r\n// withRouter wraps component so that we can access the history object in our action method\r\nexport default connect(null, { createProfile })(withRouter(CreateProfile));\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { PropTypes as propTypes } from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n// action\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile'\r\n\r\nconst EditProfile = ({ profile: { profile, loading }, createProfile, getCurrentProfile, history }) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        company: '',\r\n        website: '',\r\n        location: '',\r\n        status: '',\r\n        skills: '',\r\n        githubusername:'',\r\n        bio: '',\r\n        twitter: '',\r\n        facebook: '',\r\n        linkedIn: '',\r\n        youtube: '',\r\n        instagram: ''\r\n    });\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n        // also fill the form with the current values\r\n        setFormData({\r\n            company: loading || !profile.company ? '' : profile.company,\r\n            website: loading || !profile.website ? '' : profile.website,\r\n            location: loading || !profile.location ? '' : profile.location,\r\n            status: loading || !profile.status ? '' : profile.status,\r\n            skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n            githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\r\n            bio: loading || !profile.bio ? '' : profile.bio,\r\n            twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n            facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n            linkedIn: loading || !profile.social ? '' : profile.social.linkedIn,\r\n            youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n            instagram: loading || !profile.social ? '' : profile.social.instagram\r\n        });\r\n    }, [loading, getCurrentProfile])\r\n\r\n    // destructure form fields from state to use as js expressions('variables')\r\n    const {\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedIn,\r\n        youtube,\r\n        instagram\r\n    } = formData;\r\n\r\n\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createProfile(formData, history, true)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">Edit Your Profile</h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fas fa-user\" /> The more info you give, the more you'll stand out!\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form className=\"form\" onSubmit={e => onSubmit(e)} >\r\n                {/* SELECT-DROPDOWN */}\r\n                <div className=\"form-group\">\r\n                    <select name=\"status\" value={status} onChange={e => onChange(e)}>\r\n                        <option value=\"0\">* Select Professional Status</option>\r\n                        <option value=\"Developer\">Developer</option>\r\n                        <option value=\"Junior Developer\">Junior Developer</option>\r\n                        <option value=\"Senior Developer\">Senior Developer</option>\r\n                        <option value=\"Manager\">Manager</option>\r\n                        <option value=\"Student of Learning\">Student of Learning</option>\r\n                        <option value=\"Instructor\">Instructor / Mentor / Teacher</option>\r\n                        <option value=\"Intern\">Intern</option>\r\n                        <option value=\"Other\">Other</option>\r\n                    </select>\r\n                    <small className=\"form-text\">\r\n                        Where are you at in your career up to this point?\r\n                    </small>\r\n                </div>\r\n                {/* COMPANY */}\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)} />\r\n                    <small className=\"form-text\">\r\n                        Could be one you work for, or your own company.\r\n                    </small>\r\n                </div>\r\n                {/* WEBSITE */}\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)} />\r\n                    <small className=\"form-text\">\r\n                        Company URL (if applicable)\r\n                    </small>\r\n                </div>\r\n                {/* LOCATION */}\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)} />\r\n                    <small className=\"form-text\">\r\n                        City and State (suggested: e.g.: New York, NY)\r\n                    </small>\r\n                </div>\r\n                {/* SKILLS */}\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)} />\r\n                    <small className=\"form-text\">\r\n                        Seperate your technology proficiencies with a comma.\r\n                    </small>\r\n                </div>\r\n                {/* GITHUB */}\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Github Username\" name=\"githubusername\" value={githubusername} onChange={e => onChange(e)} />\r\n                    <small className=\"form-text\">\r\n                        Add your github to load your latest repos to your profile!\r\n                    </small>\r\n                </div>\r\n                {/* BIO */}\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Bio\" name=\"bio\" value={bio} onChange={e => onChange(e)} />\r\n                    <small className=\"form-text\">\r\n                        Tell us a little bit about yourself.\r\n                    </small>\r\n                </div>\r\n                {/* -----ADD_SOCIAL----- */}\r\n                <div className=\"my-2\">\r\n                    <button type='button' className='btn btn-light' onClick={() => toggleSocialInputs(!displaySocialInputs)}>\r\n                        Add Social Network Accounts\r\n                    </button>\r\n                    <span>Optional</span>\r\n                </div>\r\n\r\n                {displaySocialInputs && <Fragment>\r\n                {/* TWITTER */}\r\n                <div className=\"form-group social-input\">\r\n                    <i className=\"fab fa-twitter fa-2x\" />\r\n                    <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)} />\r\n                </div>\r\n                {/* FACEBOOK */}\r\n                <div className=\"form-group social-input\">\r\n                    <i className=\"fab fa-facebook fa-2x\" />\r\n                    <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e => onChange(e)} />\r\n                </div>\r\n                {/* YOUTUBE */}\r\n                <div className=\"form-group social-input\">\r\n                    <i className=\"fab fa-youtube fa-2x\" />\r\n                    <input type=\"text\" placeholder=\"Youtube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)} />\r\n                </div>\r\n                {/* LINKEDIN */}\r\n                <div className=\"form-group social-input\">\r\n                    <i className=\"fab fa-linkedin fa-2x\" />\r\n                    <input type=\"text\" placeholder=\"LinkedIn URL\" name=\"linkedin\" value={linkedIn} onChange={e => onChange(e)} />\r\n                </div>\r\n                {/* INSTAGRAM */}\r\n                <div className=\"form-group social-input\">\r\n                    <i className=\"fab fa-instagram fa-2x\" />\r\n                    <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)} />\r\n                </div>\r\n                    </Fragment>}\r\n\r\n                \r\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                <Link to=\"/dashboard\" className=\"btn btn-light my-1\">Go Back!</Link>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nEditProfile.propTypes = {\r\n    createProfile: propTypes.func.isRequired,\r\n    profile: propTypes.object.isRequired,\r\n    getCurrentProfile: propTypes.func.isRequired,\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n})\r\n\r\n// withRouter wraps component so that we can access the history object in our action method\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(withRouter(EditProfile));\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { PropTypes as propTypes } from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addExperience } from'../../actions/profile'\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        company: '',\r\n        title: '',\r\n        location: '',\r\n        from: '',\r\n        to: '',\r\n        current: false,\r\n        description: ''\r\n    });\r\n\r\n    const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n    // Desctructure to use as expressions\r\n    const {\r\n        company,\r\n        title,\r\n        location,\r\n        from,\r\n        to,\r\n        current,\r\n        description\r\n    } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    \r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">Add Your Experience</h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fas fa-code-branch\" />\r\n                Add any past work xperiences you may hold now, or in the past.\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form className=\"form\" onSubmit={e => {\r\n                e.preventDefault();\r\n                addExperience(formData, history);\r\n            }}>\r\n                <div className=\"form-group\">\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"* Job Title\" \r\n                        name=\"title\" \r\n                        value={title} \r\n                        onChange={e => onChange(e)} \r\n                        required \r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"* Company\" \r\n                        name=\"company\" \r\n                        value={company} \r\n                        onChange={e => onChange(e)} \r\n                        required \r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input \r\n                    type=\"text\" \r\n                        placeholder=\"Location\" \r\n                        name=\"location\" \r\n                        value={location} \r\n                        onChange={e => onChange(e)} \r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <h4>From Date:</h4>\r\n                    <input \r\n                        type=\"date\" \r\n                        name=\"from\" \r\n                        value={from} \r\n                        onChange={e => onChange(e)} \r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <p>\r\n                        <input \r\n                            type=\"checkbox\" \r\n                            name=\"current\"\r\n                            checked={current} \r\n                            value={current} \r\n                            onChange={e => {\r\n                                setFormData({ ...formData, current: !current });\r\n                                toggleDisabled(!toDateDisabled);\r\n                            }} \r\n                        />\r\n                        {' '}Current Job \r\n                    </p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <h4>To Date:</h4>\r\n                    <input \r\n                        type=\"date\" \r\n                        name=\"to\" \r\n                        value={to} \r\n                        onChange={e => onChange(e)}\r\n                        disabled={toDateDisabled ? 'disabled' : ''} \r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        name=\"description\" \r\n                        cols=\"30\" \r\n                        rows=\"5\"\r\n                        placeholder=\"Job Decription\"\r\n                        value={description}\r\n                        onChange={e => onChange(e)}></textarea>\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-primary my-1\"/>\r\n                <Link to=\"/dashboard\" className=\"btn btn-light my-1\">Go Back!</Link>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nAddExperience.propTypes = {\r\n    addExperience: propTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null, { addExperience })(withRouter(AddExperience));\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { PropTypes as propTypes } from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addEducation } from'../../actions/profile'\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        school: '',\r\n        degree: '',\r\n        fieldOfStudy: '',\r\n        from: '',\r\n        to: '',\r\n        current: false,\r\n        description: ''\r\n    });\r\n\r\n    const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n    // Desctructure to use as expressions\r\n    const {\r\n        school,\r\n        degree,\r\n        fieldOfStudy,\r\n        from,\r\n        to,\r\n        current,\r\n        description\r\n    } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    \r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">Add Your Education</h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fas fa-code-branch\" />\r\n                Add any school and/or bootcamp you attended.\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form className=\"form\" onSubmit={e => {\r\n                e.preventDefault();\r\n                addEducation(formData, history);\r\n            }}>\r\n                <div className=\"form-group\">\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"* School or Bootcamp\" \r\n                        name=\"school\" \r\n                        value={school} \r\n                        onChange={e => onChange(e)} \r\n                        required \r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"* Degree/Certificate\" \r\n                        name=\"degree\" \r\n                        value={degree} \r\n                        onChange={e => onChange(e)} \r\n                        required \r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input \r\n                    type=\"text\" \r\n                        placeholder=\"Field Of Study\" \r\n                        name=\"fieldOfStudy\" \r\n                        value={fieldOfStudy} \r\n                        onChange={e => onChange(e)} \r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <h4>From Date:</h4>\r\n                    <input \r\n                        type=\"date\" \r\n                        name=\"from\" \r\n                        value={from} \r\n                        onChange={e => onChange(e)} \r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <p>\r\n                        <input \r\n                            type=\"checkbox\" \r\n                            name=\"current\"\r\n                            checked={current} \r\n                            value={current} \r\n                            onChange={e => {\r\n                                setFormData({ ...formData, current: !current });\r\n                                toggleDisabled(!toDateDisabled);\r\n                            }} \r\n                        />\r\n                        {' '}Currently Attending \r\n                    </p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <h4>To Date:</h4>\r\n                    <input \r\n                        type=\"date\" \r\n                        name=\"to\" \r\n                        value={to} \r\n                        onChange={e => onChange(e)}\r\n                        disabled={toDateDisabled ? 'disabled' : ''} \r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        name=\"description\" \r\n                        cols=\"30\" \r\n                        rows=\"5\"\r\n                        placeholder=\"Program Decription\"\r\n                        value={description}\r\n                        onChange={e => onChange(e)}></textarea>\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-primary my-1\"/>\r\n                <Link to=\"/dashboard\" className=\"btn btn-light my-1\">Go Back!</Link>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nAddEducation.propTypes = {\r\n    addEducation: propTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null, { addEducation })(withRouter(AddEducation));\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { PropTypes as propTypes } from 'prop-types';\r\n\r\nconst ProfileItem = ({\r\n    profile: {\r\n        user: { _id, name, avatar },\r\n        status,\r\n        company,\r\n        location,\r\n        skills\r\n    }\r\n}) => {\r\n    return (\r\n        <div className=\"profile bg-light\">\r\n            <img src={avatar} alt=\"\" className=\"round-img\" />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{status} {company && <span> at {company}</span>} </p>\r\n                <p className=\"my-1\"> {location && <span>{location}</span>} </p>\r\n                <Link to={`/profile/${_id}`} className=\"btn btn-primary\">View Profile</Link>\r\n            </div>\r\n            <ul>\r\n                {/* only want a max of 4 skills from skillsArray */}\r\n                {skills.slice(0, 4).map((skill, index) => (\r\n                    <li key={index} className=\"text-primary\">\r\n                        <i className=\"fas fa-check\" />{skill}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileItem.propTypes = {\r\n    profile: propTypes.object.isRequired,\r\n}\r\n\r\nexport default ProfileItem\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { PropTypes as propTypes } from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../Layout/Spinner';\r\nimport ProfileItem from './ProfileItem';\r\nimport { getProfiles } from '../../actions/profile';\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n\r\n    useEffect(() => {\r\n        getProfiles();\r\n    }, [getProfiles]);\r\n\r\n    return (\r\n        <Fragment>\r\n            { loading ? <Spinner /> : <Fragment>\r\n                <h1 className=\"large text-primary\">Developers</h1>\r\n                <p className=\"lead\">\r\n                    <i className=\"fab fa-connectdevelop\" /> Browse and connect with other developers!\r\n                </p>\r\n                <div className=\"profiles\">\r\n                    {/* loop thru profiles object and return each item */}\r\n                    {profiles.length > 0 ? (\r\n                        profiles.map(profile => (\r\n                            <ProfileItem key={profile._id} profile={profile} />\r\n                        ))\r\n                    ) : <h4>No profiles found...</h4>}\r\n                </div>\r\n            </Fragment> }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nProfiles.propTypes = {\r\n    getProfiles: propTypes.func.isRequired,\r\n    profile: propTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\r\n","import React from 'react';\r\nimport { PropTypes as propTypes } from 'prop-types';\r\n\r\nconst ProfileTop = ({ \r\n    profile: { \r\n        status, \r\n        company, \r\n        location, \r\n        website, \r\n        social, \r\n        user: { name, avatar } \r\n    } \r\n}) => {\r\n\r\n    return (\r\n        <div className=\"profile-top bg-primary p-2\">\r\n            <img\r\n                className=\"round-img my-1\" \r\n                src={avatar} \r\n                alt=''\r\n            />\r\n            <h1 className=\"large\">{name}</h1>\r\n                <p className=\"lead\">{status} {company && <span>at {company}</span>}</p>\r\n                <p> {location && <span>{location}</span>} </p>\r\n            <div className=\"icons my-1\">\r\n                \r\n            {website && (\r\n                <a href={website} target=\"_blank\" rel=\"noopener noreferrer\" >\r\n                    <i className=\"fas fa-globe fa-2x\" />\r\n                </a>\r\n                )}\r\n\r\n                {social && social.twitter && (\r\n                    <a href={social.twitter} target=\"_blank\" rel=\"noopener noreferrer\" >\r\n                    <i className=\"fab fa-twitter fa-2x\" />\r\n                </a>\r\n                )}\r\n\r\n                {social && social.facebook && (\r\n                    <a href={social.facebook} target=\"_blank\" rel=\"noopener noreferrer\" >\r\n                    <i className=\"fab fa-facebook fa-2x\" />\r\n                </a>\r\n                )}\r\n                \r\n                {social && social.linkedIn && (\r\n                    <a href={social.linkedIn} target=\"_blank\" rel=\"noopener noreferrer\" >\r\n                    <i className=\"fab fa-linkedin fa-2x\" />\r\n                </a>\r\n                )}\r\n                \r\n                {social && social.youtube && (\r\n                    <a href={social.youtube} target=\"_blank\" rel=\"noopener noreferrer\" >\r\n                    <i className=\"fab fa-youtube fa-2x\" />\r\n                </a>\r\n                )}\r\n                \r\n                {social && social.instagram && (\r\n                    <a href={social.instagram} target=\"_blank\" rel=\"noopener noreferrer\" >\r\n                    <i className=\"fab fa-instagram fa-2x\" />\r\n                </a>\r\n                )}\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileTop.propTypes = {\r\n    profile: propTypes.object.isRequired\r\n}\r\n\r\nexport default ProfileTop\r\n","import React, { Fragment } from 'react'\r\nimport { PropTypes as propTypes } from 'prop-types'\r\n\r\nconst ProfileAbout = ({ profile: {\r\n    bio,\r\n    skills,\r\n    user: { name }\r\n} }) => {\r\n    return (\r\n        <div className=\"profile-aboutbg-light p-2\">\r\n            {bio && (\r\n            <Fragment>\r\n                <h2 className=\"text-primary\">{name.trim().split(' ')[0]}'s Bio</h2>\r\n                <p>\r\n                    {bio}\r\n                </p>\r\n                <div className=\"line\" />\r\n            </Fragment>\r\n            )}\r\n            \r\n            <h2 className=\"text-primary\">Skill Set</h2>\r\n            <div className=\"skills\">\r\n                {skills.map((skill, index) => (\r\n                    <div\r\n                        key={index} \r\n                        className=\"p-1\">\r\n                            <i className=\"fas fa-check\" /> {skill}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileAbout.propTypes = {\r\n    profile: propTypes.object.isRequired\r\n}\r\n\r\nexport default ProfileAbout\r\n","import React from 'react';\r\nimport { PropTypes as propTypes } from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileExperience = ({\r\n    experience: { company, title, location, current, to, from, description }\r\n}) => {\r\n    return (\r\n        <div>\r\n           <h3 className=\"text-dark\">{company}</h3>\r\n           <p>\r\n                <Moment format='YYYY/MM/DD'>{from}</Moment> - {!to ? ' Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\r\n            </p>\r\n            <p>\r\n                <strong>Position: </strong> {title}\r\n            </p>\r\n            <p>\r\n                <strong>Description: </strong> {description}\r\n            </p> \r\n        </div>\r\n    )\r\n}\r\n\r\nProfileExperience.propTypes = {\r\n    experience: propTypes.object.isRequired\r\n}\r\n\r\nexport default ProfileExperience\r\n","import React from 'react';\r\nimport { PropTypes as propTypes } from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileEducation = ({\r\n    education: { school, degree, fieldOfStudy, current, to, from, description }\r\n}) => {\r\n    return (\r\n        <div>\r\n           <h3 className=\"text-dark\">{school}</h3>\r\n           <p>\r\n                <Moment format='YYYY/MM/DD'>{from}</Moment> - {!to ? ' Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\r\n            </p>\r\n            <p>\r\n                <strong>Degree: </strong> {degree}\r\n            </p>\r\n            <p>\r\n                <strong>Field Of Study: </strong> {fieldOfStudy}\r\n            </p>\r\n            <p>\r\n                <strong>Description: </strong> {description}\r\n            </p> \r\n        </div>\r\n    )\r\n}\r\n\r\nProfileEducation.propTypes = {\r\n    education: propTypes.object.isRequired\r\n}\r\n\r\nexport default ProfileEducation","import React, { useEffect } from \"react\";\r\nimport { PropTypes as propTypes } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../Layout/Spinner\";\r\nimport { getGithubRepos } from \"../../actions/profile\";\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n  useEffect(() => {\r\n    getGithubRepos(username);\r\n  }, [getGithubRepos, username]);\r\n\r\n  return (\r\n    <div className=\"profile-github\">\r\n      <h2 className=\"text-primary my-1\">Github Repositories</h2>\r\n      {repos === null ? (\r\n        <Spinner />\r\n      ) : (\r\n        repos.map(repo => (\r\n          <div key={repo.id} className=\"repo bg-white p-1 my-1\">\r\n            <div>\r\n              <h4>\r\n                <a\r\n                  href={repo.html_url}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  {repo.name}\r\n                </a>\r\n              </h4>\r\n              <p>{repo.description}</p>\r\n            </div>\r\n            <div>\r\n                <ul>\r\n                    <li className=\"badge badge-primary\">\r\n                        Stars: {repo.stargazers_count}\r\n                    </li>\r\n                    <li className=\"badge badge-dark\">\r\n                        Watchers: {repo.watchers_count}\r\n                    </li>\r\n                    <li className=\"badge badge-light\">\r\n                        Forks: {repo.forks_count}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n  getGithubRepos: propTypes.func.isRequired,\r\n  repos: propTypes.array.isRequired,\r\n  username: propTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  repos: state.profile.repos\r\n});\r\n\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { PropTypes as propTypes } from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../Layout/Spinner';\r\nimport ProfileTop from './ProfileTop';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileExperience from './ProfileExperience';\r\nimport ProfileEducation from './ProfileEducation';\r\nimport ProfileGithub from './ProfileGithub';\r\nimport { getProfileById } from '../../actions/profile';\r\n\r\nconst Profile = ({ \r\n    getProfileById, \r\n    profile: { profile, loading }, \r\n    auth, \r\n    match }) => { \r\n\r\n    useEffect(() => {\r\n        // we get the id from the url\r\n        getProfileById(match.params.id)\r\n    }, [getProfileById, match.params.id]);\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            {profile === null || loading ? <Spinner /> : <Fragment>\r\n                <Link to='/profiles' className=\"btn btn-light\">\r\n                    Back to profiles list\r\n                </Link>\r\n                {auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id \r\n                && (<Link to='/edit-profile' className=\"btn btn-dark\">\r\n                    Edit Profile\r\n                </Link>)}\r\n                <div className=\"profile-grid my-1\">\r\n                    <ProfileTop profile={profile} />\r\n                    <ProfileAbout profile={profile} />\r\n\r\n                    <div className=\"profile-exp bg-white p-2\">\r\n                        <h2 className=\"text-primary\">Experience</h2>\r\n                        {profile.experience.length > 0 ? (\r\n                            <Fragment>\r\n                                {profile.experience.map(experience => (\r\n                                    <ProfileExperience \r\n                                        key={experience._id} \r\n                                        experience={experience} \r\n                                    />\r\n                                ))}\r\n                            </Fragment>\r\n                        ) : (<h4>No Experience Credentials</h4>)}\r\n                    </div>\r\n\r\n                    <div className=\"profile-edu bg-white p-2\">\r\n                        <h2 className=\"text-primary\">Education</h2>\r\n                        {profile.education.length > 0 ? (\r\n                            <Fragment>\r\n                                {profile.education.map(education => (\r\n                                    <ProfileEducation \r\n                                        key={education._id} \r\n                                        education={education} \r\n                                    />\r\n                                ))}\r\n                            </Fragment>\r\n                        ) : (<h4>No Education Credentials</h4>)}\r\n                    </div>\r\n\r\n                    {profile.githubusername && (\r\n                        <ProfileGithub username={profile.githubusername} />\r\n                    )}\r\n                </div>\r\n            </Fragment>}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nProfile.propTypes = {\r\n    getProfileById: propTypes.func.isRequired,\r\n    profile: propTypes.object.isRequired,\r\n    auth: propTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PropTypes as propTypes } from \"prop-types\";\r\nimport Moment from \"react-moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\r\n\r\nconst PostItem = ({\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  auth,\r\n  post: { _id, text, name, avatar, user, likes, comments, date },\r\n  showActions\r\n}) => {\r\n  return (\r\n    <div className=\"post bg-white p-1 my-1\">\r\n      <div>\r\n        <Link to={`/profile/${user}`}>\r\n          <img className=\"round-img\" src={avatar} alt=\"\" />\r\n          <h4>{name}</h4>\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <p className=\"my-1\">{text}</p>\r\n\r\n        <p className=\"post-date\">\r\n          Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\r\n        </p>\r\n\r\n        {showActions && (\r\n          <Fragment>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-light\"\r\n              onClick={e => addLike(_id)}\r\n            >\r\n              <i className=\"fas fa-thumbs-up\" />{\" \"}\r\n              <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\r\n            </button>\r\n\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-light\"\r\n              onClick={e => removeLike(_id)}\r\n            >\r\n              <i className=\"fas fa-thumbs-down\" />\r\n            </button>\r\n\r\n            <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\r\n              Discussion{\" \"}\r\n              {comments.length > 0 && (\r\n                <span className=\"comment-count\">{comments.length}</span>\r\n              )}\r\n            </Link>\r\n\r\n            {!auth.loading && user === auth.user._id && (\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger\"\r\n                onClick={e => deletePost(_id)}\r\n              >\r\n                <i className=\"fas fa-times\" />\r\n              </button>\r\n            )}\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true\r\n}\r\n\r\nPostItem.propTypes = {\r\n  post: propTypes.object.isRequired,\r\n  auth: propTypes.object.isRequired,\r\n  addLike: propTypes.func.isRequired,\r\n  removeLike: propTypes.func.isRequired,\r\n  deletePost: propTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  addLike,\r\n  removeLike,\r\n  deletePost\r\n})(PostItem);\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    GET_POST,\r\n    ADD_COMMENT,\r\n    REMOVE_COMMENT\r\n} from './types';\r\n\r\n// Get posts\r\nexport const getPosts = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/posts');\r\n        dispatch({\r\n            type: GET_POSTS,\r\n            payload: res.data\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n// Add like\r\nexport const addLike = id => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`/api/posts/like/${id}`);\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            payload: {\r\n                id,\r\n                likes: res.data\r\n            }\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n// Remove like\r\nexport const removeLike = id => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`/api/posts/unlike/${id}`);\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            payload: {\r\n                id,\r\n                likes: res.data\r\n            }\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n// Delete Post\r\nexport const deletePost = id => async dispatch => {\r\n    try {\r\n        await axios.delete(`/api/posts/${id}`);\r\n        dispatch({\r\n            type: DELETE_POST,\r\n            payload: id\r\n        });\r\n        dispatch(setAlert('Post Removed', 'success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n// Create a new post\r\nexport const addPost = formData => async dispatch => {\r\n\r\n    // since we are sending data we need to create a config object for the applicaiton type: application/json>>contentType\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n    \r\n    try {\r\n        const res = await axios.post('/api/posts/', formData, config);\r\n        dispatch({\r\n            type: ADD_POST,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert('Post Created', 'success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n\r\n// Get post\r\nexport const getPost = id => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/posts/${id}`);\r\n        dispatch({\r\n            type: GET_POST,\r\n            payload: res.data\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////\r\n// __________*_ EVERYTHING ABOVE THIS LINE WORKS  _*____________\r\n// Add comment\r\nexport const addComment = (postId, formData) => async dispatch => {\r\n    // since we are sending data we need to create a config object for the applicaiton type: application/json>>contentType\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n    try {\r\n        // if theres an issue w the post it has to be cuz of the rout after changing the post route before ...i could be wrong tho and everthings fine\r\n        const res = await axios.post(`/api/posts/comment/${postId}`, formData, config);\r\n        dispatch({\r\n            type: ADD_COMMENT,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert('Comment Added', 'success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n\r\n// Remove comment\r\nexport const deleteComment = (postId, commentId) => async dispatch => {\r\n\r\n    try {\r\n        // if theres an issue w the post it has to be cuz of the rout after changing the post route before ...i could be wrong tho and everthings fine\r\n        // removed constVar because the payload is targeting the commentId and not res.data ***********\r\n        await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\r\n        dispatch({\r\n            type: REMOVE_COMMENT,\r\n            payload: commentId\r\n        });\r\n        dispatch(setAlert('Comment Removed', 'success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};","import React, { useState } from 'react';\r\nimport { PropTypes as propTypes } from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addPost } from '../../actions/post';\r\n\r\nconst PostForm = ({ addPost }) => {\r\n\r\n    // only one input field here so just need one empty string for state\r\n    const [text, setText] = useState('');\r\n\r\n\r\n    return (\r\n        <div className=\"post-form\">\r\n            <div className=\"bg-primary p\">\r\n                <h3>Say something...</h3>\r\n            </div>\r\n            <form \r\n                className=\"form my-1\"\r\n                onSubmit={e => {\r\n                    e.preventDefault();\r\n                    addPost({ text });\r\n                    setText();\r\n                    // i would gt a type error: 'cannot read statusText of undefined'\r\n                    // BUT when i refresh the page the post loads\r\n                    // adding window - location - reload cb it does that refresh for me\r\n                    window.location.reload(false)\r\n                }}>\r\n                <textarea \r\n                    name=\"text\"  \r\n                    cols=\"30\" \r\n                    rows=\"5\"\r\n                    value={text}\r\n                    onChange={e => setText(e.target.value)}></textarea>\r\n                <input type=\"submit\" className=\"btn btn-dark my-1\"/>    \r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nPostForm.propTypes = {\r\n    addPost: propTypes.func.isRequired\r\n};\r\n\r\n//mapstatetoprops is for if you need to bring in state FROM REDUX\r\n//this component has its own state!\r\n\r\nexport default connect(null, { addPost })(PostForm);\r\n","import React, { Fragment, useEffect } from 'react'\r\nimport { PropTypes as propTypes } from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../Layout/Spinner';\r\nimport PostItem from './PostItem';\r\nimport { getPosts } from '../../actions/post';\r\nimport PostForm from './PostForm';\r\n\r\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\r\n\r\n    useEffect(() => {\r\n        getPosts();\r\n    }, [getPosts]);\r\n\r\n\r\n    return loading ? <Spinner /> : (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">Posts</h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fas fa-user\"/> Welcome to the Community!\r\n            </p>\r\n            <PostForm />\r\n            <div className=\"posts\">\r\n                {posts.map(post => (\r\n                    <PostItem key={post._id} post={post} />\r\n                ))}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nPosts.propTypes = {\r\n    getPosts: propTypes.func.isRequired,\r\n    post: propTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    post: state.post\r\n})\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Posts);\r\n","import React, { useState } from \"react\";\r\nimport { PropTypes as propTypes } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addComment } from \"../../actions/post\";\r\n\r\nconst CommentForm = ({ postId, addComment }) => {\r\n\r\n    const [text, setText] = useState('');\r\n\r\n\r\n  return (\r\n    <div className=\"post-form\">\r\n      <div className=\"bg-primary p\">\r\n        <h3>Leave a Comment</h3>\r\n      </div>\r\n      <form\r\n        className=\"form my-1\"\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addComment(postId, { text });\r\n          setText(\"\");\r\n          window.location.reload(false)\r\n        }}\r\n      >\r\n        <textarea\r\n          name=\"text\"\r\n          placeholder=\"let's start a thread!\"\r\n          cols=\"30\"\r\n          rows=\"5\"\r\n          onChange={e => setText(e.target.value)}\r\n          required\r\n        ></textarea>\r\n        <input type=\"submit\" className=\"btn btn-dark my-1\"/>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  addComment: propTypes.func.isRequired\r\n};\r\n\r\n// const mapStateToProps = state => ({});\r\n\r\nexport default connect(null, { addComment })(CommentForm);\r\n","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PropTypes as propTypes } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Moment from \"react-moment\";\r\nimport { deleteComment } from \"../../actions/post\";\r\n\r\nconst CommentItem = ({\r\n  postId,\r\n  comment: { _id, text, name, avatar, user, date },\r\n  auth,\r\n  deleteComment\r\n}) => {\r\n  return (\r\n    <div className=\"post bg-white p-1 my-1\">\r\n      <div>\r\n        <Link to={`/profile/${user}`}>\r\n          <img className=\"round-img\" src={avatar} alt=\"\" />\r\n          <h4> {name}</h4>\r\n        </Link>\r\n      </div>\r\n      <p className=\"my-1\">{text}</p>\r\n      <p className=\"post-date\">\r\n        Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\r\n      </p>\r\n      {!auth.loading && user === auth.user._id && (\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger\"\r\n          onClick={e => deleteComment(postId, _id)}\r\n        >\r\n          <i className=\"fas fa-times\"/>\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentItem.propTypes = {\r\n  deleteComment: propTypes.func.isRequired,\r\n  postId: propTypes.string.isRequired,\r\n  comment: propTypes.object.isRequired,\r\n  auth: propTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { PropTypes as propTypes } from 'prop-types';\r\n// connector for redux\r\nimport { connect } from 'react-redux';\r\n// components\r\nimport Spinner from '../Layout/Spinner';\r\nimport PostItem from '../posts/PostItem';\r\nimport CommentForm from '../post/CommentForm';\r\nimport CommentItem from  '../post/CommentItem';\r\n// action(s) for connect\r\nimport { getPost } from '../../actions/post';\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n\r\n    useEffect(() => {\r\n        getPost(match.params.id)\r\n        // in video he didnt also pass the match params id like he did in profile\r\n        // this is a marker comment to remind me if anything this i a spot to go back to\r\n    }, [getPost, match.params.id]);\r\n\r\n\r\n\r\n    return loading || post === null ? <Spinner /> : <Fragment>\r\n        <Link to='/posts' className=\"btn\">\r\n            Back to Posts\r\n        </Link>\r\n        <PostItem \r\n            post={post} \r\n            showActions={false} \r\n        />\r\n        <CommentForm postId={post._id} />\r\n        <div \r\n            className=\"comments\">\r\n            {post.comments.map(comment => (\r\n                <CommentItem \r\n                    key={comment._id} \r\n                    comment={comment} \r\n                    postId={post._id} \r\n                />\r\n            ))}\r\n        </div>\r\n    </Fragment>\r\n}\r\n\r\nPost.propTypes = {\r\n    getPost: propTypes.func.isRequired,\r\n    post: propTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    post: state.post\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post);\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <>\r\n            <h1 className=\"large text-primary\">\r\n                <i className=\"fas fa-exclamation-triangle\" /> Page Not found\r\n            </h1>\r\n            <p className=\"large\">Sorry, this page does not exist.<br/>Well, it does, because you're looking at it.<br/>However, you are not supposed to go here.</p>\r\n            <small>Enjoy coneccting!</small>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { PropTypes as propTypes } from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst PrivateRoute = ({ component: Component, auth: { isAuthenticated, loading }, ...rest }) => (\r\n    <Route {...rest} render={props => !isAuthenticated && !loading ? (\r\n        <Redirect to='/login' />\r\n    ) : ( <Component {...props} /> )} />\r\n)\r\n\r\nPrivateRoute.propTypes = {\r\n    auth: propTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Register from \"../auth/Register\";\r\nimport Login from \"../auth/Login\";\r\nimport Alert from '../Layout/Alert';\r\nimport Dashboard from '../dashboard/Dashboard';\r\nimport CreateProfile from '../profile-forms/CreateProfile';\r\nimport EditProfile from '../profile-forms/EditProfile';\r\nimport AddExperience from '../profile-forms/AddExperience';\r\nimport AddEducation from '../profile-forms/AddEducation';\r\nimport Profiles from '../profiles/Profiles';\r\nimport Profile from '../profile/Profile';\r\nimport Posts from '../posts/Posts';\r\nimport Post from '../post/Post';\r\nimport NotFound from '../Layout/NotFound';\r\nimport PrivateRoute from '../routing/PrivateRoute';\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <section className=\"container\">\r\n            <Alert/>\r\n            <Switch>\r\n              <Route exact path=\"/register\" component={Register} />\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <Route exact path=\"/profiles\" component={Profiles} />\r\n              <Route exact path=\"/profile/:id\" component={Profile} />\r\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n              <PrivateRoute exact path=\"/create-profile\" component={CreateProfile} />\r\n              <PrivateRoute exact path=\"/edit-profile\" component={EditProfile} />\r\n              <PrivateRoute exact path=\"/add-experience\" component={AddExperience} />\r\n              <PrivateRoute exact path=\"/add-education\" component={AddEducation} />\r\n              <PrivateRoute exact path=\"/posts\" component={Posts} />\r\n              <PrivateRoute exact path=\"/posts/:id\" component={Post} />\r\n              <Route component={NotFound} />\r\n            </Switch>\r\n          </section>\r\n    )\r\n}\r\nexport default Routes;","// ALERT_REDUCER\r\nimport { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n/**\r\n * initial state will start off as an empty array\r\n * THEN...\r\n *  [\r\n *      {\r\n *          id: 1,\r\n *          msg: 'Please login',\r\n *          alertType: 'success'\r\n *      }\r\n * ]\r\n * the msg will be displayed\r\n * and the alertType is for determining the color of the txt-font\r\n */\r\nconst initialState = [];\r\n\r\nexport default function(state = initialState, action) {\r\n    // Desctucture the type and the payload from the action\r\n    const { type, payload } = action;\r\n\r\n    // action << TYPE && PAYLOAD\r\n    // switch_stmnt\r\n    switch (type) {\r\n        // Depending on the type we have to determine what gets set to the 'state'\r\n        case SET_ALERT:\r\n            /**\r\n             * State is immutable\r\n             * so we have to include the state that's already there\r\n             */\r\n            // Sread_OPR :  ...state into an array\r\n            return [ ...state, payload ];\r\n        //=================================================================        \r\n        case REMOVE_ALERT:\r\n            // remove a specifc alert by its ID\r\n            // * payload is JUST the ID\r\n            return state.filter(alert => alert.id !== payload) ;\r\n            // * * * * * Every reducer-switch WILL CONTAIN A DEFAULT! * * * * *\r\n        default:\r\n            return state;\r\n    }   \r\n\r\n}","import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    ACCOUNT_DELETED\r\n} from '../actions/types';\r\n\r\n/**\r\n * initial state will be an object\r\n *  > get token and store in local storage\r\n *  > declare 'isAuthenticated' to null to begin ...when registered/login then it will be SET TO \"~TRUE~\"\r\n *  > make sure its loading then set to false when data is loaded\r\n *  > user set to null to act as a placeholder for payload from backend\r\n */\r\n\r\n const initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null\r\n };\r\n\r\n export default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', payload.token);\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated: true,\r\n                loading: false\r\n            }     \r\n        case REGISTER_SUCCESS:\r\n            // if we get the token back SET the token we get!\r\n            localStorage.setItem('token', payload.token);\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated: true,\r\n                loading: false\r\n            }\r\n        case REGISTER_FAIL:\r\n            // \\/~ both do the same thing ~/\\\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false\r\n            }\r\n        case LOGIN_FAIL:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false\r\n            }\r\n        case LOGOUT:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false\r\n            }\r\n        case ACCOUNT_DELETED:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false\r\n            }        \r\n        case AUTH_ERROR:  \r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;    \r\n    }\r\n }","import { \r\n    GET_PROFILE, \r\n    PROFILE_ERROR, \r\n    CLEAR_PROFILE, \r\n    UPDATE_PROFILE, \r\n    GET_PROFILES,\r\n    GET_REPOS\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    profiles: [],\r\n    repos: [],\r\n    loading: true,\r\n    error: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case GET_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n                loading: false\r\n            }\r\n        case GET_PROFILES: \r\n            return {\r\n                ...state,\r\n                profiles: payload,\r\n                loading: false \r\n            }    \r\n        case UPDATE_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n                loading: false\r\n            }    \r\n        case PROFILE_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false,\r\n                profile: null\r\n            }\r\n        case CLEAR_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: null,\r\n                repos: [],\r\n                loading: false\r\n            }   \r\n        case GET_REPOS:\r\n            return {\r\n                ...state,\r\n                repos: payload,\r\n                loading: false\r\n            }     \r\n        default: \r\n            return state;        \r\n    }\r\n}","/**\r\n * initial state : [posts], post: null, loading: true, error: {}\r\n * /\\works lke profile-error\r\n * \r\n */\r\nimport {\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    GET_POST,\r\n    ADD_COMMENT,\r\n    REMOVE_COMMENT\r\n} from '../actions/types'\r\n\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    post: null,\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    // pull out type & payload from action\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: payload,\r\n                loading: false\r\n            }\r\n        case GET_POST:\r\n            return {\r\n                ...state,\r\n                post: payload,\r\n                loading: false\r\n            }    \r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                //the spreader in the array makes a copy of the post object and sends the payload\r\n                // brad swapped th spreded state.post with the payload so the recent post is on top\r\n                // however i just added a reload cb to the method to refresh the screen which gives the same result\r\n                // this is a comment to mark this spot to change if i end up needing to do that for some reason for a bug\r\n                posts: [...state.post, payload],\r\n                loading: false\r\n            }    \r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post._id !== payload),\r\n                loading: false\r\n            }    \r\n        case POST_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            }\r\n        case UPDATE_LIKES:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map(post => post._id === payload.id ? { ...post, likes: payload.likes } : post),\r\n                loading: false \r\n            }\r\n        case ADD_COMMENT:\r\n            return {\r\n                ...state,\r\n                post: { ...state.post, comments: payload },\r\n                loading: false\r\n            }\r\n        case REMOVE_COMMENT:\r\n            return {\r\n                ...state,\r\n                post: {\r\n                    ...state.post,\r\n                    comments: state.post.comments.filter(comment => comment._id !== payload)\r\n                },\r\n                loading: false\r\n            }            \r\n        default:\r\n            return state;        \r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport alert from './alert';\r\nimport auth from './auth';\r\nimport profile from './profile'\r\nimport post from './post';\r\n\r\nexport default combineReducers({\r\n    alert, \r\n    auth,\r\n    profile,\r\n    post\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer, \r\n    initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React, { Fragment, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/Layout/Navbar\";\nimport Landing from \"./components/Layout/Landing\";\n// import Register from \"./components/auth/Register\";\n// import Login from \"./components/auth/Login\";\n// import Alert from './components/Layout/Alert';\n// import Dashboard from './components/dashboard/Dashboard';\n// import CreateProfile from './components/profile-forms/CreateProfile';\n// import EditProfile from './components/profile-forms/EditProfile';\n// import AddExperience from './components/profile-forms/AddExperience';\n// import AddEducation from './components/profile-forms/AddEducation';\n// import Profiles from './components/profiles/Profiles';\n// import Profile from './components/profile/Profile';\n// import Posts from './components/posts/Posts';\n// import Post from './components/post/Post';\n// import NotFound from './components/Layout/NotFound';\n// import PrivateRoute from './components/routing/PrivateRoute';\nimport Routes from './components/routing/Routes';\n// Redux\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { loadUser } from './actions/auth'\nimport setAuthToken from './utils/setAuthToken';\n\nimport \"./App.css\";\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token)\n}\n\nconst App = () => {\n\n  // when the state updates it will keep running unless we ad extra param with empty-brackets == doesnt depend on any props or state so its to run it once \n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <Provider store={ store }>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Landing} />\n            <Route component={Routes} />\n          </Switch>\n\n          {/* <section className=\"container\">\n            <Alert/>\n            <Switch>\n              <Route exact path=\"/register\" component={Register} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/profiles\" component={Profiles} />\n              <Route exact path=\"/profile/:id\" component={Profile} />\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n              <PrivateRoute exact path=\"/create-profile\" component={CreateProfile} />\n              <PrivateRoute exact path=\"/edit-profile\" component={EditProfile} />\n              <PrivateRoute exact path=\"/add-experience\" component={AddExperience} />\n              <PrivateRoute exact path=\"/add-education\" component={AddEducation} />\n              <PrivateRoute exact path=\"/posts\" component={Posts} />\n              <PrivateRoute exact path=\"/posts/:id\" component={Post} />\n              <Route component={NotFound} />\n            </Switch>\n          </section> */}\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}